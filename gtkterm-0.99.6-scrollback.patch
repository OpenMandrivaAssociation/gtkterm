diff -Nru gtkterm-0.99.5.orig/src/config.c gtkterm-0.99.5/src/config.c
--- gtkterm-0.99.5.orig/src/config.c	2005-11-14 20:43:56.000000000 +0100
+++ gtkterm-0.99.5/src/config.c	2007-11-28 22:46:32.000000000 +0100
@@ -147,6 +149,7 @@
 static gint config_color_bg(GtkWidget *, gpointer);
 static void Transparency_OnOff(GtkWidget *, gpointer);
 static void change_scale(GtkRange *, gpointer);
+static gint scrollback_set(GtkWidget *, GdkEventFocus *, gpointer);
 
 extern GtkWidget *display;
 
@@ -1145,6 +1154,10 @@
   cfgStoreValue(cfg, "term_columns", string, CFG_INI, pos);
   g_free(string);
   
+  string = g_strdup_printf("%d", term_conf.scrollback);
+  cfgStoreValue(cfg, "term_scrollback", string, CFG_INI, pos);
+  g_free(string);
+  
   if(term_conf.visual_bell == FALSE)
     string = g_strdup_printf("False");
   else
@@ -1259,8 +1272,8 @@
 
 gint Config_Terminal(GtkWidget *widget, guint param)
 {
-  GtkWidget *Dialog, *BoiteH, *BoiteV, *Label, *Check_Bouton, *Bouton, *Eventbox, *Table, *HScale;
-  gchar *fonte;
+  GtkWidget *Dialog, *BoiteH, *BoiteV, *Label, *Check_Bouton, *Bouton, *Eventbox, *Table, *HScale, *Entry;
+  gchar *fonte, *scrollback;
 
   Dialog = gtk_dialog_new_with_buttons (_("Terminal configuration"),
 					NULL,
@@ -1268,7 +1281,7 @@
 					GTK_STOCK_CLOSE,
 					GTK_RESPONSE_CLOSE,
 					NULL);
-  gtk_widget_set_size_request(GTK_WIDGET(Dialog), 400, 300);
+  gtk_widget_set_size_request(GTK_WIDGET(Dialog), 400, 400);
 
 
   BoiteV = gtk_vbox_new(FALSE, 0);
@@ -1340,6 +1353,22 @@
   gtk_box_pack_start(GTK_BOX(BoiteV), HScale, FALSE, TRUE, 0);
 
 
+  Label = gtk_label_new(NULL);
+  gtk_misc_set_alignment(GTK_MISC(Label), 0, 0);
+  gtk_label_set_markup(GTK_LABEL(Label), "<b>Screen : </b>");  
+  gtk_box_pack_start(GTK_BOX(BoiteV), Label, FALSE, TRUE, 10);
+
+  BoiteH = gtk_hbox_new(FALSE, 0);
+  Label = gtk_label_new("Scrollback lines :");
+  gtk_box_pack_start(GTK_BOX(BoiteH), Label, FALSE, TRUE, 0);
+  Entry = gtk_entry_new_with_max_length(4);
+  scrollback =  g_strdup_printf("%d", term_conf.scrollback);
+  gtk_entry_set_text(GTK_ENTRY(Entry), scrollback);
+  g_free(scrollback);
+  g_signal_connect(GTK_OBJECT(Entry), "focus-out-event", G_CALLBACK(scrollback_set), 0);
+  gtk_box_pack_start(GTK_BOX(BoiteH), Entry, FALSE, TRUE, 0);
+  gtk_box_pack_start(GTK_BOX(BoiteV), BoiteH, FALSE, TRUE, 0);
+
   gtk_container_add(GTK_CONTAINER(GTK_DIALOG(Dialog)->vbox), BoiteV);
 
   //g_signal_connect(GTK_OBJECT(Dialog), "response", G_CALLBACK(config_term_response), 0);
@@ -1472,3 +1501,21 @@
   cfgStoreValue(cfg, "term_background_saturation", string, CFG_INI, 0);
   g_free(string);  
 }
+
+gint scrollback_set(GtkWidget *Entry, GdkEventFocus *event, gpointer data)
+{
+  const gchar *text;
+  gint scrollback;
+  
+  if (Entry)
+  {
+    text = gtk_entry_get_text(GTK_ENTRY(Entry));
+    scrollback = (gint)g_ascii_strtoll(text, NULL, 10);
+    if (scrollback)
+      term_conf.scrollback = scrollback;
+    else
+      term_conf.scrollback = 100;
+    vte_terminal_set_scrollback_lines (VTE_TERMINAL(display), term_conf.scrollback);
+  }
+  return FALSE;
+}
